/**
 * Auto-generated by FluidKit from FastAPI routes and models - DO NOT EDIT
 * Changes will be overwritten on regeneration.
 */

import type { FluidTypes } from '../.fluidkit/runtime';
import type { Address, User } from './users';

/**
 * An enumeration.
 */
export enum OrderStatus {
  PENDING = "pending",
  CONFIRMED = "confirmed",
  SHIPPED = "shipped",
  DELIVERED = "delivered",
  CANCELLED = "cancelled",
}

export interface OrderListResponse {
  orders: OrderResponse[];
  total: number;
  page: number;
  has_next: boolean;
}

export interface OrderResponse {
  /** @external uuid.UUID */
  id: FluidTypes.UUID;
  order_number: string;
  customer: User;
  status: OrderStatus;
  items: OrderItem[];
  /** @external decimal.Decimal */
  total_amount: FluidTypes.Decimal;
  /** @external datetime.datetime */
  created_at: FluidTypes.DateTime;
}

export interface OrderItem {
  /** @external uuid.UUID */
  id: FluidTypes.UUID;
  product_name: string;
  quantity: number;
  /** @external decimal.Decimal */
  unit_price: FluidTypes.Decimal;
  /** @external decimal.Decimal */
  total_price: FluidTypes.Decimal;
}

export interface CreateOrderRequest {
  /** @external uuid.UUID */
  customer_id: FluidTypes.UUID;
  items: Record<string, any>[];
  shipping_address: Address;
  /** @default "standard" */
  shipping_method?: ShippingMethod;
}

/**
 * An enumeration.
 */
export enum ShippingMethod {
  STANDARD = "standard",
  EXPRESS = "express",
  OVERNIGHT = "overnight",
}