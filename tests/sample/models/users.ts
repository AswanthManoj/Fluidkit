/**
 * Auto-generated by FluidKit from FastAPI routes and models - DO NOT EDIT
 * Changes will be overwritten on regeneration.
 */

import type { FluidTypes } from '../.fluidkit/runtime';

export interface User {
  /** @external uuid.UUID */
  id: FluidTypes.UUID;
  username: string;
  /** @external pydantic.networks.EmailStr */
  email: FluidTypes.EmailStr;
  contact_info: ContactInfo;
  /** @default [] */
  addresses?: Address[];
  /** @default "user" */
  role?: UserRole;
  /** @default "pending" */
  status?: UserStatus;
  /** @external datetime.datetime */
  created_at: FluidTypes.DateTime;
  updated_at?: FluidTypes.DateTime;
  /**
   * @external decimal.Decimal
   * @default 0.00
   */
  account_balance?: FluidTypes.Decimal;
}

export interface ContactInfo {
  /** @external pydantic.networks.EmailStr */
  primary_email: FluidTypes.EmailStr;
  phone?: string;
}

export interface Address {
  street: string;
  city: string;
  state?: string;
  postal_code: string;
  /** @default "US" */
  country?: string;
}

/**
 * An enumeration.
 */
export enum UserRole {
  ADMIN = "admin",
  USER = "user",
  MODERATOR = "moderator",
}

/**
 * An enumeration.
 */
export enum UserStatus {
  ACTIVE = "active",
  SUSPENDED = "suspended",
  PENDING = "pending",
}

export interface UserListResponse {
  users: UserResponse[];
  total: number;
  page: number;
  has_next: boolean;
}

export interface UserResponse {
  /** @external uuid.UUID */
  id: FluidTypes.UUID;
  username: string;
  /** @external pydantic.networks.EmailStr */
  email: FluidTypes.EmailStr;
  contact_info: ContactInfo;
  role: UserRole;
  status: UserStatus;
  /** @external datetime.datetime */
  created_at: FluidTypes.DateTime;
  /** @external decimal.Decimal */
  account_balance: FluidTypes.Decimal;
}

export interface CreateUserRequest {
  username: string;
  /** @external pydantic.networks.EmailStr */
  email: FluidTypes.EmailStr;
  password: string;
  contact_info: ContactInfo;
  /** @default "user" */
  role?: UserRole;
}